{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenHora","terminoBusqueda","e","target","name","value","Object","values","includes","async","url","resultado","fetch","eventos","horasTomadas","map","evento","hora_id","listadoHoras","listadoHorasArray","Array","from","filter","li","dataset","horaId","forEach","classList","remove","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","horaPrevia","add","ponentesInput","ponentes","ponentesFiltrados","respuesta","arrayPonentes","ponente","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","console","log","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","onclick","eliminarTag","appendChild","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if(horas) {\r\n\r\n        let busqueda =  {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value; \r\n\r\n            if(Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n            const {dia, categoria_id} = busqueda;\r\n            const url =  `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {  \r\n            // Comprobar eventos ya tomados y quitar la clase de deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n\r\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada');\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {  \r\n\r\n        // Deshabilitar la hora previa si hay un nuevo click\r\n        const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n        if(horaPrevia) {\r\n            horaPrevia.classList.remove('horas__hora--seleccionada');\r\n         }\r\n\r\n        //Agregar clase de seleccionado\r\n        e.target.classList.add('horas__hora--seleccionada');\r\n        \r\n        inputHiddenHora.value = e.target.dataset.horaId;\r\n        \r\n        }\r\n        \r\n    }\r\n\r\n\r\n})();","(function() { \r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener('input', buscarPonentes)\r\n\r\n        async function obtenerPonentes() {\r\n            const url =  `/api/ponentes`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado)\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []) { \r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n             \r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value\r\n\r\n            if (busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados=ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) !== -1) {\r\n                        return ponente;\r\n                    }\r\n                })\r\n\r\n                console.log(ponentesFiltrados);\r\n            }\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        //Recuperar el input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        //Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag)\r\n\r\n        function guardarTag(e) {\r\n            if(e.keyCode === 44 ) {\r\n\r\n                if(e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()]\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n        \r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.onclick = eliminarTag\r\n                tagsDiv.appendChild(etiqueta)\r\n            })\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n\r\n            e.target.remove()\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n\r\n})() // IIFE"]}